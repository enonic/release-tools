name: generate-docs
description: This is an action to generate Enonic Developer Portal documentation from asciidoc files.

inputs:
  github-token:
    description: 'The GitHub token to authenticate with.'
    required: true
  versions:
    description: 'Versions to generate documentation for. In JSON format'
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.repository.default_branch }}

    - id: Build
      run: |
        source_docs=${{github.workspace}}/docs
        build_docs=${{github.action_path}}/build/docs
        versions_file=$build_docs/versions.json
        input_versions='${{ inputs.versions }}'

        mkdir --parents $build_docs

        if [ -n "$input_versions" ]; then
          echo "$input_versions" > $versions_file
        elif [ ! -f $source_docs/versions.json ]; then
          echo '{"versions": [{"label": "stable","checkout": "${{github.ref}}","latest": true}]}' > $versions_file
        else
          jq 'if all(.versions[]; .latest != true) then .versions[0].latest = true else . end' docs/versions.json > $versions_file
        fi

        jq -c '.versions[]' $versions_file | while read i; do
          label=$(echo "$i" | jq -r '.label')
          checkout=$(echo "$i" | jq -r '.checkout')
          build_docs_subdir="$build_docs/$label"

          git clean -fdx
          git checkout $(git rev-parse $checkout)

          mkdir "$build_docs_subdir" && cp --recursive $source_docs/* "$build_docs_subdir"

          docker run --volume "$build_docs_subdir:/documents" asciidoctor/docker-asciidoctor asciidoctor \
          --backend=html5 \
          -a icons=font \
          -a setanchors=true \
          -a sectlinks=true \
          -a encoding=utf-8 \
          -a linkattrs=true \
          -a idprefix= \
          -a toc=right \
          -a outfilesuffix=.ahtml \
          '**/*.adoc'
        done
      shell: bash

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ inputs.github-token }}
        exclude_assets: '**/*.adoc,*/versions.json'
        publish_dir: ${{github.action_path}}/build/docs
