name: "JReleaser - Release to Central Portal Repository"
description: "Signs and uploads artifacts using JReleaser"
inputs:
  groupId:
    description: 'Group Id'
    required: true
  artifactId:
    description: 'Artifact Id'
    required: true
  version:
    description: 'Version'
    required: true
runs:
  using: "composite"
  steps:
    - name: Prepare GROUP_PATH
      shell: bash
      run: |
        GROUP_ID="${{ inputs.groupId }}"
        GROUP_PATH=$(echo "$GROUP_ID" | tr '.' '/')
        echo "GROUP_PATH=$GROUP_PATH" >> "$GITHUB_ENV"

    - name: Download artifacts
      shell: bash
      run: |
        set -e
        BASE_URL="https://repo.enonic.com/public/$GROUP_PATH/${{ inputs.artifactId }}/${{ inputs.version }}"

        mkdir -p out

        echo "ARTIFACT_DIR=$(pwd)/out" >> "$GITHUB_ENV"

        for SUFFIX in ".jar" "-sources.jar" "-javadoc.jar" ".pom" ".module"; do
          FILE="${{ inputs.artifactId }}-${{ inputs.version }}${SUFFIX}"
          URL="$BASE_URL/$FILE"
          echo "Downloading $URL"
          curl -fSL -o "out/$FILE" "$URL"
        done

        echo "All artifacts downloaded"

    - name: Debug build artifacts
      shell: bash
      run: |
        echo "Contents of out/"
        ls -l out/

#    - name: Prepare staging directory
#      shell: bash
#      run: |
#        mkdir -p out/${{ inputs.artifactId }}
#        mv out/*.jar out/*.pom out/*.module out/${{ inputs.artifactId }}/

    - name: Generate jreleaser.yml
      shell: bash
      run: |
        cat <<EOF > jreleaser.yml
        project:
          name: ${{ inputs.groupId }}-${{ inputs.artifactId }}-${{ inputs.version }}
          version: ${{ inputs.version }}
          languages:
            java:
              groupId: ${{ inputs.groupId }}

        signing:
          active: ALWAYS
          armored: true
          mode: MEMORY
          publicKey: \${JRELEASER_GPG_PUBLIC_KEY}
          secretKey: \${JRELEASER_GPG_SECRET_KEY}
          passphrase: \${JRELEASER_GPG_PASSPHRASE}

        deploy:
          maven:
            mavenCentral:
              app:
                active: ALWAYS
                url: https://central.sonatype.com/api/v1/publisher
                namespace: com.enonic
                applyMavenCentralRules: true
                stagingRepositories:
                  - ${ARTIFACT_DIR}
                artifactOverrides:
                  - groupId: ${{ inputs.groupId }}
                    artifactId: ${{ inputs.artifactId }}
                    jar: true
                    sourceJar: true
                    javadocJar: true
                    verifyPom: true

        release:
          github:
            enabled: false
        EOF

    - name: Set up JReleaser
      uses: jreleaser/release-action@v2
      with:
        version: latest
        arguments: deploy --dry-run --config-file jreleaser.yml
